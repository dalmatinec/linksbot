from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
import os
from config import TOKEN, CHAT_ID  # –ë–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –û–±—ã—á–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (—Ç–æ–ª—å–∫–æ –≤ –õ–°)
private_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
private_keyboard.add(KeyboardButton("üè¥‚Äç‚ò†Ô∏è –ù–∞—à–∏ —Å—Å—ã–ª–∫–∏"))

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–æ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏)
inline_kb = InlineKeyboardMarkup(row_width=1)
inline_kb.add(
    InlineKeyboardButton("üí¨ –ù–∞—à —á–∞—Ç", callback_data="get_chat_link"),
    InlineKeyboardButton("‚ö° –≠–∫—Å–ø—Ä–µ—Å—Å –ë–æ—Ç", url="https://t.me/ExpressBot")
)

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    if message.chat.type == "private":  # –í –õ–° –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏.", reply_markup=private_keyboard)
    else:
        await message.answer("–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –õ–° –∏ –≤ –≥—Ä—É–ø–ø–µ.")

@dp.message_handler(lambda message: message.text.lower() in ["—Å—Å—ã–ª–∫–∞", "/links"])
async def send_links(message: types.Message):
    if message.chat.type == "private":  # –í –õ–° —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await message.answer_photo(
            photo="https://telegra.ph/file/your-image.jpg",
            caption="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:",
            reply_markup=inline_kb
        )
    else:  # –í –≥—Ä—É–ø–ø–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await message.answer_photo(
            photo="https://telegra.ph/file/your-image.jpg",
            caption="–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∞—à —á–∞—Ç:\nüí¨ t.me/joinchat/yourchat"
        )

@dp.callback_query_handler(lambda call: call.data == "get_chat_link")
async def generate_link(call: types.CallbackQuery):
    invite_link = await bot.export_chat_invite_link(CHAT_ID)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —á–∞—Ç
    await call.message.answer(f"üí¨ –ß–∞—Ç: {invite_link}")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
